# Generated by Django 4.2.9 on 2024-02-04 14:31

import datetime
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('student_number', models.CharField(max_length=20, unique=True)),
                ('major', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('is_staff', models.BooleanField(blank=True, default=False, null=True)),
                ('last_login', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='last login')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building', models.CharField(max_length=64)),
                ('class_name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='ClassSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('Saturday', 'Saturday'), ('Sunday', 'Sunday'), ('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('CE', 'Computer Engineering'), ('EE', 'Electrical Engineering'), ('MSE', 'Material Science Engineering'), ('AE', 'Aerospace Engineering'), ('ME', 'Mechanical Engineering'), ('CHE', 'Chemical Engineering'), ('IE', 'Industrial Engineering'), ('MS', 'Mathematical Science'), ('P', 'Physics'), ('E', 'Economics')], max_length=100)),
                ('code', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], default='private', max_length=10)),
                ('classes', models.ManyToManyField(blank=True, to='barnomz_app.classsession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('rate', models.FloatField()),
                ('knowledge_rate', models.FloatField()),
                ('teaching_rate', models.FloatField()),
                ('communication_rate', models.FloatField()),
                ('exam_difficulty_rate', models.FloatField()),
                ('number_of_votes', models.PositiveIntegerField()),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='barnomz_app.department')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=255)),
                ('course_code', models.CharField(max_length=20, unique=True)),
                ('unit_count', models.PositiveIntegerField()),
                ('group', models.PositiveIntegerField()),
                ('final_exam_date', models.CharField(max_length=64)),
                ('final_exam_time', models.TimeField(default=datetime.time(9, 0))),
                ('number_of_petitioners', models.PositiveIntegerField()),
                ('number_of_capacity', models.PositiveIntegerField()),
                ('number_of_enrolled', models.PositiveIntegerField()),
                ('info', models.CharField(default='', max_length=512)),
                ('prerequisite_text', models.CharField(default='', max_length=255)),
                ('warning', models.CharField(default='', max_length=512)),
                ('grade', models.CharField(choices=[('Bsc', 'کارشناسی'), ('Msc', 'کارشناسی-ارشد')], default='Bsc', max_length=32)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='barnomz_app.department')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='barnomz_app.classroom')),
                ('presented_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='barnomz_app.professor')),
            ],
        ),
        migrations.CreateModel(
            name='CommentOnProfessors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('rate', models.FloatField(blank=True, null=True)),
                ('knowledge_rate', models.FloatField(blank=True, null=True)),
                ('teaching_rate', models.FloatField(blank=True, null=True)),
                ('communication_rate', models.FloatField(blank=True, null=True)),
                ('exam_difficulty_rate', models.FloatField(blank=True, null=True)),
                ('is_anonymous', models.BooleanField(default=True, null=True)),
                ('is_deleted', models.BooleanField(default=False, null=True)),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='barnomz_app.professor')),
            ],
        ),
        migrations.AddField(
            model_name='classsession',
            name='course_session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='barnomz_app.course'),
        ),
        migrations.AddField(
            model_name='classsession',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='barnomz_app.classroom'),
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like', models.BooleanField()),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='barnomz_app.commentonprofessors')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'comment')},
            },
        ),
    ]
